name: Deploy images and config
on:
  push:
    branches:
      - main
    paths:
      - 'images.toml'

env:
  PROJECT: 'cpg-common'
  CONFIG_DESTINATION: 'gs://cpg-config/templates/images/images.toml'
  DOCKER_PREFIX: 'australia-southeast1-docker.pkg.dev'
  IMAGES_PREFIX: 'australia-southeast1-docker.pkg.dev/cpg-common/images'

jobs:
  make_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v2

      - name: "Checkout ref before change"
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.before }}
          path: 'before'

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: "Listing changed tags in images.toml"
        id: read_toml
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import tomllib, os
            d = tomllib.load(open("images.toml", "rb"))
            before_d = {}
            if os.path.isfile("before/images.toml"):
              before_d = tomllib.load(open("before/images.toml", "rb"))
            d = {"include": [
              {"name": name, "tag": tag} for name, tag in d["images"].items()
              if not before_d.get(name) or before_d[name] != tag
            ]}
            print(str(d).replace(" ", ""), end='')

      - name: "Set matrix"
        id: set_matrix
        run: |
          echo "matrix=${{ steps.read_toml.outputs.stdout }}" >> $GITHUB_OUTPUT

  deploy_images:
    runs-on: ubuntu-latest
    needs:
      - make_matrix
    strategy:
      matrix: ${{ fromJson(needs.make_matrix.outputs.matrix) }}
    env:
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
      CLOUDSDK_CORE_DISABLE_PROMPTS: 1
    steps:
      - name: "checkout repo"
        uses: actions/checkout@v2

      - name: "gcloud setup"
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: cpg-common
          service_account_key: ${{ secrets.GCP_SERVER_DEPLOY_KEY }}

      - name: "gcloud docker auth"
        run: |
          gcloud auth configure-docker ${{ env.DOCKER_PREFIX }}

      - name: "build image"
        run: |
          docker build \
          --build-arg VERSION=${{ matrix.tag }} \
          --tag ${{ env.IMAGES_PREFIX }}/${{ matrix.name }}:${{ matrix.tag }} \
          images/${{ matrix.name }}

      - name: "push image"
        run: |
          docker push "${{ env.IMAGES_PREFIX }}/${{ matrix.name }}:${{ matrix.tag }}"

  deploy_config:
    runs-on: ubuntu-latest
    needs:
      - deploy_images
    env:
      CLOUDSDK_CORE_DISABLE_PROMPTS: 1
    steps:
      - name: "checkout repo"
        uses: actions/checkout@v2

      - name: "gcloud setup"
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id:  ${{ env.PROJECT }}
          service_account_key: ${{ secrets.GCP_SERVER_DEPLOY_KEY }}

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: "prepare config"
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import toml, os 
            prefix = ${{ env.IMAGES_PREFIX }}
            d = tomllib.load(open('images.toml', 'rb'))
            d = {'images': {k: f'{prefix}/k:{v}' for k, v in d.items()}
            tomllib.dump(d, open('config.toml', 'wb')}

      - name: "deploy config toml"
        run: |
          gcloud storage cp config.toml ${{ env.CONFIG_DESTINATION }}
