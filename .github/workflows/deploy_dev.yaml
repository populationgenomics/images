name: Deploy dev image
on:
  pull_request:
    types: [opened, synchronize]

  workflow_dispatch:
    inputs:
      image_name:
        description: 'Name of image, same as the directory name'
        required: true
      image_tag:
        description: 'Tag of image'
        required: true
      docker_cli_args:
        description: 'Extra docker CLI params'
        required: false

permissions:
  id-token: write
  contents: read

env:
  PROJECT: 'cpg-common'
  DOCKER_BUILDKIT: 1
  BUILDKIT_PROGRESS: plain
  CLOUDSDK_CORE_DISABLE_PROMPTS: 1
  DOCKER_PREFIX: 'australia-southeast1-docker.pkg.dev'
  IMAGES_PREFIX: 'australia-southeast1-docker.pkg.dev/cpg-common/images-dev'

jobs:
  get_next_version:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    outputs:
      matrix: ${{ steps.get_next_version.outputs.next_version }}
    steps:
      - name: 'Checkout repo'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref == 'refs/heads/main' && 'main' || github.event.ref }}
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - id: 'google-cloud-auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.FETCH_TAGS_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.FETCH_TAGS_WORKLOAD_SERVICE_ACCOUNT }}

      - id: 'google-cloud-sdk-setup'
        name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT }}

      - name: 'Get current version'
        id: get_next_version
        run: |
          next_version=$(python .github/workflows/get_version.py)
          echo "next_version=$next_version" >> "$GITHUB_OUTPUT"

  deploy_image_auto:
    runs-on: ubuntu-latest
    environment: 'dev'
    needs:
      - get_next_version
    if: ${{ needs.get_next_version.outputs.matrix != '{"include":[]}' && needs.get_next_version.outputs.matrix != '' && github.event_name == 'pull_request' }}
    strategy:
      matrix: ${{ fromJson(needs.get_next_version.outputs.matrix) }}
    steps:
      - name: 'checkout repo'
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - id: 'google-cloud-auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/1051897107465/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: 'gh-images-dev-deployer@cpg-common.iam.gserviceaccount.com'

      - id: 'google-cloud-sdk-setup'
        name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2

      - name: 'gcloud docker auth'
        run: |
          gcloud auth configure-docker ${{ env.DOCKER_PREFIX }}

      - name: 'build image with get_next_version'
        run: |
          docker build \
          --tag ${{ env.IMAGES_PREFIX }}/${{ matrix.name }}:${{ matrix.tag }} \
          images/${{ matrix.name }}

      - name: 'Push to dev artifactory'
        run: |
          docker push "${{ env.IMAGES_PREFIX }}/${{ matrix.name }}:${{ matrix.tag }}" | tee push.log
          digest=$(grep 'digest:' push.log | grep -o 'sha256:[0-9a-f]*')
          echo ":package: Link to image:" >> $GITHUB_STEP_SUMMARY
          echo "https://console.cloud.google.com/artifacts/docker/cpg-common/australia-southeast1/images-dev/${{ matrix.name }}/$digest?project=cpg-common" >> $GITHUB_STEP_SUMMARY

  deploy_image_manual:
    runs-on: ubuntu-latest
    environment: 'dev'
    if: ${{ github.event_name == 'workflow_dispatch' }}
    steps:
      - name: 'checkout repo'
        uses: actions/checkout@v4

      # - id: 'google-cloud-auth'
      #   name: 'Authenticate to Google Cloud'
      #   uses: 'google-github-actions/auth@v2'
      #   with:
      #     workload_identity_provider: 'projects/1051897107465/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
      #     service_account: 'gh-images-dev-deployer@cpg-common.iam.gserviceaccount.com'

      # - id: 'google-cloud-sdk-setup'
      #   name: 'Set up Cloud SDK'
      #   uses: google-github-actions/setup-gcloud@v2

      # - name: 'gcloud docker auth'
      #   run: |
      #     gcloud auth configure-docker ${{ env.DOCKER_PREFIX }}

      - name: Validate and export inputs
        shell: bash
        env:
          IMAGE_NAME: ${{ github.event.inputs.image_name }}
          IMAGE_TAG: ${{ github.event.inputs.image_tag }}
          CLI_ARGS: ${{ github.event.inputs.docker_cli_args }}
        run: |

          # Validate image name
          if ! [[ "$IMAGE_NAME" =~ ^[a-z0-9_-]+$ ]]; then
            echo "❌ Invalid image name: $IMAGE_NAME"
            exit 1
          fi

          # Validate image tag
          if ! [[ "$IMAGE_TAG" =~ ^[a-zA-Z0-9._-]+$ ]]; then
            echo "❌ Invalid image tag: $IMAGE_TAG"
            exit 1
          fi

          # Validate CLI args (only if not empty)
          if [[ -n "$CLI_ARGS" && "$CLI_ARGS" =~ [\;\&\|\>\<\`\(\)\$] ]]; then
            echo "❌ Unsafe characters in CLI args: $CLI_ARGS"
            exit 1
          fi

          # Export validated values to later steps
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "CLI_ARGS=$CLI_ARGS" >> $GITHUB_ENV
          echo "IMAGE_PATH=images/$IMAGE_NAME" >> $GITHUB_ENV
          echo "IMAGE_FULL_TAG=${{ env.IMAGES_PREFIX }}/$IMAGE_NAME:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build image with args
        run: |
          docker build \
            $CLI_ARGS \
            --build-arg VERSION="$IMAGE_TAG" \
            --tag "$IMAGE_FULL_TAG" \
            "$IMAGE_PATH"

      - name: 'Push to dev artifactory'
        run: |
          docker push "$IMAGE_FULL_TAG" | tee push.log
          digest=$(grep 'digest:' push.log | grep -o 'sha256:[0-9a-f]*')
          echo ":package: Link to image:" >> $GITHUB_STEP_SUMMARY
          echo "https://console.cloud.google.com/artifacts/docker/cpg-common/australia-southeast1/images-dev/$IMAGE_NAME/$digest?project=cpg-common" >> $GITHUB_STEP_SUMMARY
