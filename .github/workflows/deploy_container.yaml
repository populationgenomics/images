name: Deploy container
on:
  workflow_dispatch:
    inputs:
      gcp_project_id:
        description: "The GCP project name to use for gcloud setup"
        default: analysis-runner
      image_name:
        description: "Name of image, same as the directory name"
        required: true
      image_tag:
        description: "Tag of image"
        required: true
      docker_cli_args:
        description: "Extra docker CLI params"
        required: false

  workflow_call:
    inputs:
      gcp_project_id:
        description: "The GCP project name to use for gcloud setup"
        type: string
        default: analysis-runner
      image_name:
        description: "Name of image, same as the directory name"
        type: string
        required: true
      image_tag:
        description: "Tag of image"
        type: string
        required: true
      docker_cli_args:
        description: "Extra docker CLI params"
        type: string
        required: false

jobs:
  deployImage:
    runs-on: ubuntu-latest

    env:
      GCP_CONTAINER_REGISTRY: australia-southeast1-docker.pkg.dev/cpg-common/images
      AZURE_CONTAINER_REGISTRY: cpgcommonimages.azurecr.io
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
      CLOUDSDK_CORE_DISABLE_PROMPTS: 1
      DOCKER_IMAGE: ${{ github.event.inputs.image_name }}:${{ github.event.inputs.image_tag }}
      IMAGE_NAME: ${{ github.event.inputs.image_name }}
      IMAGE_TAG: ${{ github.event.inputs.image_tag }}

    steps:
      - name: "checkout repo"
        uses: actions/checkout@v2

      - name: "gcloud setup"
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: analysis-runner
          service_account_key: ${{ secrets.GCP_SERVER_DEPLOY_KEY }}

      - name: "gcloud docker auth"
        run: |
          gcloud auth configure-docker australia-southeast1-docker.pkg.dev

      - name: "azure setup"
        uses: azure/login@v1
        with:
          creds: $${{ secrets.AZURE_CREDENTIALS }}

      - name: "azure docker auth"
        uses: azure/docker-login@v1
        with:
          login-server: $AZURE_CONTAINER_REGISTRY
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: "build image"
        run: |
          docker build \
            ${{ inputs.docker_cli_args }} \
            --build-arg VERSION=$IMAGE_TAG \
            --tag $DOCKER_IMAGE \
            images/$IMAGE_NAME

      - name: "tag and push gcp image"
        run: |
          docker image tag $DOCKER_IMAGE $GCP_CONTAINER_REGISTRY/$DOCKER_IMAGE &&
          docker push $GCP_CONTAINER_REGISTRY/$DOCKER_IMAGE

      - name: "tag and push azure image"
        run: |
          docker image tag $DOCKER_IMAGE $AZURE_CONTAINER_REGISTRY/$DOCKER_IMAGE &&
          $AZURE_CONTAINER_REGISTRY/$DOCKER_IMAGE
