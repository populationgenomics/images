name: Deploy all in images.toml
on:
  push:
    branches:
      - main
    paths:
      - 'images.toml'

jobs:
  make_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v2

      - name: "Checkout ref before change"
        uses: actions/checkout@v2
        with:
          python-version: '3.11'
          ref: ${{ github.event.before }}
          path: 'before'

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: "Listing changed tags in images.toml"
        id: read_toml
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import tomllib, os
            d = tomllib.load(open("images.toml", "rb"))
            before_d = tomllib.load(open("before/images.toml", "rb"))
            d = {"include": [
              {"name": name, "tag": tag} for name, tag in d["images"].items()
              if not before_d.get(name) or before_d[name] != tag
            ]}
            print(str(d).replace(" ", ""), end='')

      - name: "Set matrix"
        id: set_matrix
        run: |
          echo "matrix=${{ steps.read_toml.outputs.stdout }}" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs:
      - make_matrix
    strategy:
      matrix: ${{ fromJson(needs.make_matrix.outputs.matrix) }}
    env:
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
      CLOUDSDK_CORE_DISABLE_PROMPTS: 1
      PREFIX: australia-southeast1-docker.pkg.dev/cpg-common/images
    steps:
      - name: "checkout repo"
        uses: actions/checkout@v2

      - name: "gcloud setup"
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: analysis-runner
          service_account_key: ${{ secrets.GCP_SERVER_DEPLOY_KEY }}

      - name: "gcloud docker auth"
        run: |
          gcloud auth configure-docker australia-southeast1-docker.pkg.dev

      - name: "build image"
        run: |
          docker build \
          --build-arg VERSION=${{ matrix.tag }} \
          --tag ${PREFIX}/${{ matrix.name }}:${{ matrix.tag }} \
          images/${{ matrix.name }}

      - name: "push image"
        run: |
          docker push "${PREFIX}/${{ matrix.name }}:${{ matrix.tag }}"
